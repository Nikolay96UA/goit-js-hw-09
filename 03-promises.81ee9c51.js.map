{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAWC,SAASC,iBAAiB,SACrCC,EAAYF,SAASG,cAAc,UAEnCC,EAAaL,EAAS,GACtBM,EAAYN,EAAS,GACrBO,EAAcP,EAAS,GAE7BG,EAAUK,iBAAiB,SAE3B,SAAoBC,GAClBA,EAAMC,iBAIN,IAHA,IAAMC,EAAQC,OAAOP,EAAWQ,OAC1BC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OACzBG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhC1B,EAHiB0B,EACIL,EAAQG,GAAQE,EAAI,IAGtCC,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OAEhD+B,QAAQC,IAAI,uBAAwCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3DiC,OAAM,SAAAP,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOM,QACd,sBAAuCJ,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OAE/C+B,QAAQC,IAAI,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst allInput = document.querySelectorAll('input');\nconst btnSubmit = document.querySelector('button');\n\nconst firstDelay = allInput[0];\nconst stepDelay = allInput[1];\nconst amountInput = allInput[2];\n\nbtnSubmit.addEventListener('click', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const delay = Number(firstDelay.value);\n  const step = Number(stepDelay.value);\n  const amount = Number(amountInput.value);\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + step * (i - 1);\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$allInput","document","querySelectorAll","$ce04d3a99e08e73b$var$btnSubmit","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountInput","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.81ee9c51.js.map"}