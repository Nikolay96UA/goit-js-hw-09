{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAWC,SAASC,iBAAiB,SACrCC,EAAYF,SAASG,cAAc,UAEnCC,EAAaL,EAAS,GACtBM,EAAYN,EAAS,GACrBO,EAAcP,EAAS,GAE7BG,EAAUK,iBAAiB,SAE3B,SAAoBC,GAClBA,EAAMC,iBACN,MAAMC,EAAQC,OAAOP,EAAWQ,OAC1BC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAClC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhC1B,EAHiB0B,EACIL,EAAQG,GAAQE,EAAI,IAGtCC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,OAExC6B,QAAQC,IAAI,uBAAqB/B,QAAiBC,MAAU,IAE7D+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOK,QACd,sBAAoBjC,QAAiBC,OAEvC6B,QAAQC,IAAI,sBAAoB/B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst allInput = document.querySelectorAll('input');\nconst btnSubmit = document.querySelector('button');\n\nconst firstDelay = allInput[0];\nconst stepDelay = allInput[1];\nconst amountInput = allInput[2];\n\nbtnSubmit.addEventListener('click', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n  const delay = Number(firstDelay.value);\n  const step = Number(stepDelay.value);\n  const amount = Number(amountInput.value);\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + step * (i - 1);\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$allInput","document","querySelectorAll","$47d4ff9957288465$var$btnSubmit","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.cd4fb591.js.map"}